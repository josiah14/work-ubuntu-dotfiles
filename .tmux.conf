set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mode-mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# required to prevent garbage in lxterminal
# set-option -g set-clipboard off

# in normal tmux mode
bind-key Escape copy-mode # prefix + escape starts copy mode
bind-key v paste-buffer # prefix + p pastes the latest buffer

# in copy mode...
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'V' rectangle-toggle

bind-key -t vi-copy Y copy-end-of-line
bind-key '+' delete-buffer

## Clipboard selection integration
# Requires profix key before the command
# Copy Tmux paste buffer to clipboard
# bind C-c run "tmux save-buffer - | xclip -i -selection clipboard;"
bind C-c run "tmux show-buffer | xsel -i -b;"
# Copy clipboard to tmux paste buffer and paste tmux paste buffer
# bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer;"
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer;"

# /*bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clibboard"*/

# Window shuffling bindings
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key b command-prompt -p "break pane to:" "break-pane -t '%%'"

setw -g clock-mode-style 12

# bind-key y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# copy & paste between tmux and x clipboard
# /*bind C-p run-shell "tmux set-buffer \"$(xclip -o)\"; # tmux paste-buffer"*/
# /*bind C-y run-shell "tmux show-buffer | xclip -sel clip -i"*/
